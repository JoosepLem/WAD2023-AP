{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    posts: []\n  },\n  getters: {\n    getPosts: state => {\n      return state.posts;\n    }\n  },\n  mutations: {\n    setPosts(state, posts) {\n      state.posts = posts;\n    },\n    addPost(state, data) {\n      fetch(\"http://localhost:3000/post/add-post\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(() => {\n        state.posts.push(JSON.stringify(data));\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getAllPosts() {}\n  },\n  actions: {\n    addPostAct(act, data) {\n      act.commit('addPost', data);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","posts","getters","getPosts","mutations","setPosts","addPost","data","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","push","catch","e","console","log","getAllPosts","actions","addPostAct","act","commit","modules"],"sources":["/Users/nikita_filin/Desktop/TU/WAD/WAD2023-AP/blog/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    posts: []\n  },\n  getters: {\n    getPosts: (state) => {\n      return state.posts;\n    },\n  },\n\n  mutations: {\n\n    setPosts(state, posts) {\n      state.posts = posts;\n    },\n\n    addPost(state, data) {\n\n      fetch(\"http://localhost:3000/post/add-post\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        credentials: 'include',\n        body: JSON.stringify(data)\n      })\n          .then((response) => response.json())\n          .then(() => {\n            state.posts.push(JSON.stringify(data));\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n    },\n\n    getAllPosts(){\n      \n    }\n  },\n\n  actions: {\n    addPostAct(act, data) {\n      act.commit('addPost', data);\n    },\n  },\n  modules: {\n  }\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,EAAGH,KAAK,IAAK;MACnB,OAAOA,KAAK,CAACC,KAAK;IACpB;EACF,CAAC;EAEDG,SAAS,EAAE;IAETC,QAAQA,CAACL,KAAK,EAAEC,KAAK,EAAE;MACrBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IAEDK,OAAOA,CAACN,KAAK,EAAEO,IAAI,EAAE;MAEnBC,KAAK,CAAC,qCAAqC,EAAE;QAC3CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC3B,CAAC,CAAC,CACGQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAC,MAAM;QACVf,KAAK,CAACC,KAAK,CAACiB,IAAI,CAACL,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;MACxC,CAAC,CAAC,CACDY,KAAK,CAAEC,CAAC,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAChB,CAAC,CAAC;IACR,CAAC;IAEDG,WAAWA,CAAA,EAAE,CAEb;EACF,CAAC;EAEDC,OAAO,EAAE;IACPC,UAAUA,CAACC,GAAG,EAAEnB,IAAI,EAAE;MACpBmB,GAAG,CAACC,MAAM,CAAC,SAAS,EAAEpB,IAAI,CAAC;IAC7B;EACF,CAAC;EACDqB,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}