{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post\"\n};\nconst _hoisted_2 = {\n  class: \"post-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"post-data\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"creation-date\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"post-content\"\n};\nconst _hoisted_9 = {\n  class: \"likes\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getPosts, post => {\n    return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n      class: \"author-img\",\n      src: post.profileImage,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"p\", _hoisted_5, _toDisplayString(post.created), 1 /* TEXT */)]), post.postImage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      class: \"post-img\",\n      src: post.postImage,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_7)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, _toDisplayString(post.postContent), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n      class: \"add-like\",\n      onClick: $event => _ctx.$store.dispatch('incrementLikesAct', $options.getPosts.indexOf(post))\n    }, [_createElementVNode(\"img\", {\n      class: \"likes-icon\",\n      src: post.likeIcon,\n      alt: \"\"\n    }, null, 8 /* PROPS */, _hoisted_11)], 8 /* PROPS */, _hoisted_10), _createElementVNode(\"span\", null, _toDisplayString(post.likes) + \" likes\", 1 /* TEXT */)])])]);\n  }), 256 /* UNKEYED_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_renderList","$options","getPosts","post","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","src","profileImage","alt","_hoisted_5","_toDisplayString","created","postImage","_hoisted_6","_hoisted_8","postContent","_hoisted_9","onClick","$event","_ctx","$store","dispatch","indexOf","likeIcon","likes"],"sources":["/Users/nikita_filin/Desktop/TU/WAD/WAD2023-AP/blog/src/components/Post.vue"],"sourcesContent":["<template>\n  <section class=\"post\" v-for=\"post in getPosts\">\n    <div class=\"post-wrapper\">\n      <div class=\"post-data\">\n        <img class=\"author-img\" :src=\"post.profileImage\" alt=\"\">\n        <p class=\"creation-date\">{{ post.created }}</p>\n      </div>\n      <div v-if=\"post.postImage\">\n        <img class=\"post-img\" :src=\"post.postImage\" alt=\"\">\n      </div>\n      <div class=\"post-content\">\n        <p>{{ post.postContent }}</p>\n      </div>\n      <div class=\"likes\">\n        <button class=\"add-like\" @click=\"$store.dispatch('incrementLikesAct', getPosts.indexOf(post))\">\n          <img class=\"likes-icon\" :src=\"post.likeIcon\" alt=\"\">\n        </button>\n        <span>{{ post.likes }} likes</span>\n      </div>\n\n    </div>\n  </section>\n</template>\n\n<script>\nexport default {\n  computed: {\n    getPosts() {\n      return this.$store.getters.getPosts;\n    },\n  },\n}\n</script>\n\n\n\n\n\n<style>\n\n.likes{\n  display: flex;\n  justify-content: space-between;\n}\n\n*{\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nhtml{\n  position: relative;\n  min-height: 100%;\n}\n\nbody {\n  margin: 0 0 100px;\n  bottom: 70px;\n  font-family: 'Times New Roman', Times, serif, monospace;\n  background-color: #f2f2f2;\n}\n\ndiv > p {\n  font-size: 18px;\n}\n\n\n.author-img{\n  max-width: 30px;\n  max-height: 30px;\n}\n\n.author-img + p{\n  font-size: 16px;\n}\n\n.add-like{\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n}\n\n.post{\n  margin-top: 30px;\n  display: flex;\n  justify-content: center;\n}\n\n.post-wrapper{\n  padding: 25px;\n  border: 1px solid #333333;\n  border-radius: 10px;\n  width: 650px;\n  max-height: 800px;\n  display: flex;\n  flex-direction: column;\n  gap: 7px;\n}\n\n.post-img{\n  width: 100%;\n  max-height: 400px;\n}\n\n\n\n.likes-icon{\n  max-width: 30px;\n  max-height: 30px;\n}\n\n.post-data{\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n\n\n\n@media screen and (max-width: 780px) {\n  .post{\n    padding-right: 20px;\n    padding-left: 20px;\n  }\n\n  .post-wrapper{\n    max-width: 500px;\n  }\n}\n\n</style>"],"mappings":";;EACWA,KAAK,EAAC;AAAM;;EACdA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAW;;;EAEjBA,KAAK,EAAC;AAAe;;;;;;EAKrBA,KAAK,EAAC;AAAc;;EAGpBA,KAAK,EAAC;AAAO;;;;2BAZtBC,mBAAA,CAoBUC,SAAA,QAAAC,WAAA,CApB2BC,QAAA,CAAAC,QAAQ,EAAhBC,IAAI;yBAAjCL,mBAAA,CAoBU,WApBVM,UAoBU,GAnBRC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJD,mBAAA,CAGM,OAHNE,UAGM,GAFJF,mBAAA,CAAwD;MAAnDR,KAAK,EAAC,YAAY;MAAEW,GAAG,EAAEL,IAAI,CAACM,YAAY;MAAEC,GAAG,EAAC;yCACrDL,mBAAA,CAA+C,KAA/CM,UAA+C,EAAAC,gBAAA,CAAnBT,IAAI,CAACU,OAAO,iB,GAE/BV,IAAI,CAACW,SAAS,I,cAAzBhB,mBAAA,CAEM,OAAAiB,UAAA,GADJV,mBAAA,CAAmD;MAA9CR,KAAK,EAAC,UAAU;MAAEW,GAAG,EAAEL,IAAI,CAACW,SAAS;MAAEJ,GAAG,EAAC;gFAElDL,mBAAA,CAEM,OAFNW,UAEM,GADJX,mBAAA,CAA6B,WAAAO,gBAAA,CAAvBT,IAAI,CAACc,WAAW,iB,GAExBZ,mBAAA,CAKM,OALNa,UAKM,GAJJb,mBAAA,CAES;MAFDR,KAAK,EAAC,UAAU;MAAEsB,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,MAAM,CAACC,QAAQ,sBAAsBtB,QAAA,CAAAC,QAAQ,CAACsB,OAAO,CAACrB,IAAI;QACzFE,mBAAA,CAAoD;MAA/CR,KAAK,EAAC,YAAY;MAAEW,GAAG,EAAEL,IAAI,CAACsB,QAAQ;MAAEf,GAAG,EAAC;wEAEnDL,mBAAA,CAAmC,cAAAO,gBAAA,CAA1BT,IAAI,CAACuB,KAAK,IAAG,QAAM,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}