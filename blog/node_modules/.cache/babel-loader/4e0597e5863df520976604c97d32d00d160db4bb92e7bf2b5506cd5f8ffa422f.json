{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    posts: []\n  },\n  getters: {\n    getPosts: state => {\n      return state.posts;\n    }\n  },\n  mutations: {\n    setPosts(state, posts) {\n      state.posts = posts;\n    },\n    addPost(state, data) {\n      // Pass data as a parameter\n      console.log(data);\n      fetch(\"http://localhost:3000/post/add-post\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(() => {\n        state.posts.push(data); // Assuming you want to add the new post to the state\n      }).catch(e => {\n        console.log(\"error\");\n      });\n    }\n  },\n  actions: {\n    addPostAct(act, data) {\n      // Pass commit and data as parameters\n      act.commit('addPost', data);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","posts","getters","getPosts","mutations","setPosts","addPost","data","console","log","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","push","catch","e","actions","addPostAct","act","commit","modules"],"sources":["/Users/nikita_filin/Desktop/TU/WAD/WAD2023-AP/blog/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    posts: []\n  },\n  getters: {\n    getPosts: (state) => {\n      return state.posts;\n    },\n  },\n\n  mutations: {\n\n    setPosts(state, posts) {\n      state.posts = posts;\n    },\n\n    addPost(state, data) { // Pass data as a parameter\n      console.log(data)\n      fetch(\"http://localhost:3000/post/add-post\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        credentials: 'include',\n        body: JSON.stringify(data)\n      })\n          .then((response) => response.json())\n          .then(() => {\n            state.posts.push(data); // Assuming you want to add the new post to the state\n          })\n          .catch((e) => {\n            console.log(\"error\");\n          });\n    }\n  },\n\n  actions: {\n    addPostAct(act, data) { // Pass commit and data as parameters\n      act.commit('addPost', data);\n    },\n  },\n  modules: {\n  }\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,EAAGH,KAAK,IAAK;MACnB,OAAOA,KAAK,CAACC,KAAK;IACpB;EACF,CAAC;EAEDG,SAAS,EAAE;IAETC,QAAQA,CAACL,KAAK,EAAEC,KAAK,EAAE;MACrBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IAEDK,OAAOA,CAACN,KAAK,EAAEO,IAAI,EAAE;MAAE;MACrBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBG,KAAK,CAAC,qCAAqC,EAAE;QAC3CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;MAC3B,CAAC,CAAC,CACGU,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAC,MAAM;QACVjB,KAAK,CAACC,KAAK,CAACmB,IAAI,CAACb,IAAI,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDc,KAAK,CAAEC,CAAC,IAAK;QACZd,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACtB,CAAC,CAAC;IACR;EACF,CAAC;EAEDc,OAAO,EAAE;IACPC,UAAUA,CAACC,GAAG,EAAElB,IAAI,EAAE;MAAE;MACtBkB,GAAG,CAACC,MAAM,CAAC,SAAS,EAAEnB,IAAI,CAAC;IAC7B;EACF,CAAC;EACDoB,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}