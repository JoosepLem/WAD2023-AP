{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-35e8a992\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"input-group\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"input-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Password\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 0,\n  class: \"validation-error\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"ul\", null, [/*#__PURE__*/_createElementVNode(\"li\", null, \"At least 8 characters and less than 15 characters\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Includes at least one uppercase alphabet character\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Includes at least two lowercase alphabet characters\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Includes at least one numeric value\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Starts with an uppercase alphabet\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Includes the character \\\"_\\\"\")], -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), !$data.isPasswordValid ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createTextVNode(\" Password is not valid. Please follow these conditions: \"), _hoisted_7])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    class: \"signup\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.SignUp && $options.SignUp(...args))\n  }, \"Sign up\")])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","id","type","name","required","$data","email","$event","_hoisted_4","_hoisted_5","password","isPasswordValid","_hoisted_6","_hoisted_7","_hoisted_8","onClick","_cache","args","$options","SignUp"],"sources":["/Users/nikita_filin/Desktop/TU/WAD/WAD2023-AP/blog/src/views/SignUpView.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"login-container\">\n      <div class=\"input-group\">\n        <label for=\"email\">Email</label>\n        <input id=\"email\" type=\"email\" name=\"email\" required v-model=\"email\">\n      </div>\n      <div class=\"input-group\">\n        <label for=\"password\">Password</label>\n        <input id=\"password\" type=\"password\" name=\"password\" required v-model=\"password\">\n      </div>\n\n\n      <div v-if=\"!isPasswordValid\" class=\"validation-error\">\n        Password is not valid. Please follow these conditions:\n        <ul>\n          <li>At least 8 characters and less than 15 characters</li>\n          <li>Includes at least one uppercase alphabet character</li>\n          <li>Includes at least two lowercase alphabet characters</li>\n          <li>Includes at least one numeric value</li>\n          <li>Starts with an uppercase alphabet</li>\n          <li>Includes the character \"_\"</li>\n        </ul>\n      </div>\n      <div class=\"buttons\">\n        <button class=\"signup\" @click=\"SignUp\">Sign up</button>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\n\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      isEmailValid: true,\n      isPasswordValid: true,\n    };\n  },\n  methods: {\n    SignUp() {\n      this.isPasswordValid = this.validatePassword(this.password);\n      if (this.isPasswordValid){\n        var data1 = {email: this.email, password: this.password};\n        fetch(\"http://localhost:3000/auth/signup\", {\n          method: \"POST\",\n          headers: {\"Content-Type\": \"application/json\"},\n          credentials: 'include', // Don't forget to specify this if you need cookies\n          body: JSON.stringify(data1)\n        })\n            .then((response) => response.json())\n            .then(() => {\n              location.assign(\"/\");\n            })\n            .catch((e) => {\n              console.log(e);\n            });\n      }\n    },\n\n    validatePassword(password) {\n      const isLengthValid = password.length >= 8 && password.length < 15;\n      const hasUppercase = /[A-Z]/.test(password);\n      const hasTwoLowercase = /[a-z].*[a-z]/.test(password);\n      const hasNumericValue = /\\d/.test(password);\n      const startsWithUppercase = /^[A-Z]/.test(password);\n      const hasUnderscore = /_/.test(password);\n\n      const isValid =\n          isLengthValid &&\n          hasUppercase &&\n          hasTwoLowercase &&\n          hasNumericValue &&\n          startsWithUppercase &&\n          hasUnderscore;\n      this.isPasswordValid = isValid;\n      console.log(this.isPasswordValid)\n      return isValid;\n\n    },\n  },\n};\n</script>\n\n\n<style scoped>\n\n.validation-error {\n  color: red;\n  margin-top: 5px;\n  text-align: left;\n}\n\nbody {\n  font-family: 'Times New Roman', Times, serif, monospace;\n  background-color: #f2f2f2;\n}\n\nsection {\n  position: relative;\n  height: 500px;\n}\n\n\n.login-container {\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -ms-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  width: 40%;\n  /*max-width: 400px;*/\n  padding: 20px;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n#head1 {\n  margin-top: auto;\n  letter-spacing: 2px;\n}\n\n.buttons{\n  display: flex;\n  width: 100%;\n  height: 30px;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n}\n\n.signup{\n  cursor: pointer;\n  width: 20%;\n  height: 100%;\n  border-radius: 10px;\n  border: none;\n  background-color: deepskyblue;\n  opacity: 1;\n  transition: opacity 0.3s ease;\n}\n\n.signup:hover{\n  opacity: 0.7;\n}\n\n.input-group {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n}\n\nlabel {\n  width: 10%;\n  margin-right: 10px;\n  white-space: nowrap;\n}\n\n\nh2 {\n  text-align: center;\n  font-weight: normal;\n  font-size: large;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput[type=\"email\"],\ninput[type=\"password\"] {\n  width: 50%;\n  margin: auto;\n  padding: 10px;\n  margin-bottom: 15px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n}\n\n\ninput[type=\"submit\"] {\n  width: 25%;\n  margin: auto;\n  background-color: #007BFF;\n  color: #fff;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n}\n\ninput[type=\"submit\"]:hover {\n  background-color: #0056b3;\n}\n\n.forgot-password {\n  padding-top: 10px;\n  text-align: center;\n}\n\n.create-account {\n  padding-top: 10px;\n  text-align: center;\n}\n\n.login-container p {\n  font-style: italic;\n}\n\n.login-container > h2 {\n  color: black;\n}\n\n.create-account + div {\n  font-weight: bold;\n}\n\n.create-account ~ * {\n  text-shadow: 0.5px 0.5px 0.5px gray;\n}\n\n\n@media (max-width: 768px) {\n  body {\n    flex-direction: column;\n  }\n\n  .login-container {\n    width: 90%;\n  }\n\n  .input-group {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  label {\n    margin-right: 0;\n    margin-bottom: 5px;\n  }\n\n  input[type=\"email\"],\n  input[type=\"password\"] {\n    width: 100%;\n  }\n\n  input[type=\"submit\"] {\n    width: auto;\n  }\n}\n</style>"],"mappings":";;;EAESA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;;EAGrBF,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAAsC;EAA/BC,GAAG,EAAC;AAAU,GAAC,UAAQ;;;EAKHF,KAAK,EAAC;;gEAEjCC,mBAAA,CAOK,a,aANHA,mBAAA,CAA0D,YAAtD,mDAAiD,G,aACrDA,mBAAA,CAA2D,YAAvD,oDAAkD,G,aACtDA,mBAAA,CAA4D,YAAxD,qDAAmD,G,aACvDA,mBAAA,CAA4C,YAAxC,qCAAmC,G,aACvCA,mBAAA,CAA0C,YAAtC,mCAAiC,G,aACrCA,mBAAA,CAAmC,YAA/B,8BAA0B,E;;EAG7BD,KAAK,EAAC;AAAS;;uBAvBxBG,mBAAA,CA2BU,kBA1BRF,mBAAA,CAyBM,OAzBNG,UAyBM,GAxBJH,mBAAA,CAGM,OAHNI,UAGM,GAFJC,UAAgC,E,gBAChCL,mBAAA,CAAqE;IAA9DM,EAAE,EAAC,OAAO;IAACC,IAAI,EAAC,OAAO;IAACC,IAAI,EAAC,OAAO;IAACC,QAAQ,EAAR,EAAQ;+DAAUC,KAAA,CAAAC,KAAK,GAAAC,MAAA;iDAALF,KAAA,CAAAC,KAAK,E,KAErEX,mBAAA,CAGM,OAHNa,UAGM,GAFJC,UAAsC,E,gBACtCd,mBAAA,CAAiF;IAA1EM,EAAE,EAAC,UAAU;IAACC,IAAI,EAAC,UAAU;IAACC,IAAI,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;+DAAUC,KAAA,CAAAK,QAAQ,GAAAH,MAAA;iDAARF,KAAA,CAAAK,QAAQ,E,MAIrEL,KAAA,CAAAM,eAAe,I,cAA3Bd,mBAAA,CAUM,OAVNe,UAUM,G,iBAVgD,0DAEpD,GAAAC,UAOK,C,wCAEPlB,mBAAA,CAEM,OAFNmB,UAEM,GADJnB,mBAAA,CAAuD;IAA/CD,KAAK,EAAC,QAAQ;IAAEqB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,SAAO,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}