{"ast":null,"code":"import { createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d436187e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"dropdown\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"ul\", null, [/*#__PURE__*/_createElementVNode(\"li\", null, \"Heli Kopter\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"helikopter@gmail.com\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Logout\")], -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_3], 512 /* NEED_PATCH */)), [[_vShow, $data.isDropdownVisible]]);\n}","map":{"version":3,"names":["ref","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","$data","isDropdownVisible"],"sources":["C:\\Users\\johan\\OneDrive - Tartu Ãœlikool\\Veebirakenduste loomine\\WAD2023-AP\\blog\\src\\components\\Dropdown.vue"],"sourcesContent":["<template>\r\n    <div ref=\"dropdown\" v-show=\"isDropdownVisible\">\r\n      <ul>\r\n        <li>Heli Kopter</li>\r\n        <li>helikopter@gmail.com</li>\r\n        <li>Logout</li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    props: {\r\n        profileIcon: {\r\n        type: Object,\r\n        required: true,\r\n        },\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        isDropdownVisible: false,\r\n      };\r\n    },\r\n\r\n    mounted() {\r\n      this.setupDropdown();\r\n    },\r\n\r\n    methods: {\r\n      setupDropdown() {\r\n        document.addEventListener(\"click\", this.handleClick);\r\n      },\r\n      handleClick(event) {  \r\n        if (this.profileIcon.contains(event.target)) { // if user clicks on the icon\r\n            this.isDropdownVisible = !this.isDropdownVisible; // toggle the menu\r\n        } else if (this.isDropdownVisible && !this.$el.contains(event.target)) { // if menu is visible and the user clicks anywhere else\r\n            this.isDropdownVisible = false; // make the menu invisible\r\n        } \r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #dropDownMenu {\r\n    position: absolute;\r\n    top: 100%;\r\n    right: 0;\r\n    display: none;\r\n    background-color: white;\r\n    border: 1px solid #ccc;\r\n    padding: 10px;\r\n    z-index: 1;\r\n    border-radius: 10px;\r\n  }\r\n  \r\n  #dropDownMenu ul {\r\n    list-style: none;\r\n  }\r\n  \r\n  #dropDownMenu ul li {\r\n    margin-bottom: 2px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EACSA,GAAG,EAAC;AAAU;gEACjBC,mBAAA,CAIK,a,aAHHA,mBAAA,CAAoB,YAAhB,aAAW,G,aACfA,mBAAA,CAA6B,YAAzB,sBAAoB,G,aACxBA,mBAAA,CAAe,YAAX,QAAM,E;oBAHZC,UAIK,C;;wCALPC,mBAAA,CAMM,OANNC,UAMM,MAAAC,UAAA,4B,SANsBC,KAAA,CAAAC,iBAAiB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}