{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-35e8a992\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"input-group\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"input-group\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Password\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\"      <h2 id=\\\"head1\\\"><strong>Welcome to PostIt</strong></h2>\"), _createCommentVNode(\"      <div class=\\\"create-account\\\">\"), _createCommentVNode(\"        <router-link to=\\\"/\\\">Create an account</router-link>\"), _createCommentVNode(\"      </div>\"), _createCommentVNode(\"      <h2>or<br>Log in</h2>\"), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createCommentVNode(\"      <div v-if=\\\"!isPasswordValid\\\" class=\\\"validation-error\\\">\"), _createCommentVNode(\"        Password is not valid. Please follow these conditions:\"), _createCommentVNode(\"        <ul>\"), _createCommentVNode(\"          <li>At least 8 characters and less than 15 characters</li>\"), _createCommentVNode(\"          <li>Includes at least one uppercase alphabet character</li>\"), _createCommentVNode(\"          <li>Includes at least two lowercase alphabet characters</li>\"), _createCommentVNode(\"          <li>Includes at least one numeric value</li>\"), _createCommentVNode(\"          <li>Starts with an uppercase alphabet</li>\"), _createCommentVNode(\"          <li>Includes the character \\\"_\\\"</li>\"), _createCommentVNode(\"        </ul>\"), _createCommentVNode(\"      </div>\"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    class: \"signup\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.SignUp && $options.SignUp(...args))\n  }, \"Sign up\")]), _createCommentVNode(\"      <div class=\\\"forgot-password\\\">\"), _createCommentVNode(\"        <router-link to=\\\"/\\\">Forgot Password?</router-link>\"), _createCommentVNode(\"      </div>\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","id","type","name","required","$data","email","$event","_hoisted_4","_hoisted_5","password","_hoisted_6","onClick","_cache","args","$options","SignUp"],"sources":["C:\\Users\\Joosep Lember\\OneDrive\\Documents\\Ãœlikooli proge\\WAD-HW\\WAD2023-AP\\blog\\src\\views\\SignUpView.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <div class=\"login-container\">\r\n      <!--      <h2 id=\"head1\"><strong>Welcome to PostIt</strong></h2>-->\r\n      <!--      <div class=\"create-account\">-->\r\n      <!--        <router-link to=\"/\">Create an account</router-link>-->\r\n      <!--      </div>-->\r\n      <!--      <h2>or<br>Log in</h2>-->\r\n      <div class=\"input-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input id=\"email\" type=\"email\" name=\"email\" required v-model=\"email\">\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input id=\"password\" type=\"password\" name=\"password\" required v-model=\"password\">\r\n      </div>\r\n\r\n\r\n<!--      <div v-if=\"!isPasswordValid\" class=\"validation-error\">-->\r\n<!--        Password is not valid. Please follow these conditions:-->\r\n<!--        <ul>-->\r\n<!--          <li>At least 8 characters and less than 15 characters</li>-->\r\n<!--          <li>Includes at least one uppercase alphabet character</li>-->\r\n<!--          <li>Includes at least two lowercase alphabet characters</li>-->\r\n<!--          <li>Includes at least one numeric value</li>-->\r\n<!--          <li>Starts with an uppercase alphabet</li>-->\r\n<!--          <li>Includes the character \"_\"</li>-->\r\n<!--        </ul>-->\r\n<!--      </div>-->\r\n      <div class=\"buttons\">\r\n        <button class=\"signup\" @click=\"SignUp\">Sign up</button>\r\n      </div>\r\n\r\n      <!--      <div class=\"forgot-password\">-->\r\n      <!--        <router-link to=\"/\">Forgot Password?</router-link>-->\r\n      <!--      </div>-->\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\",\r\n      // isEmailValid: true,\r\n      // isPasswordValid: true,\r\n    };\r\n  },\r\n  methods: {\r\n    SignUp() {\r\n      var data1 = {email: this.email, password: this.password};\r\n      fetch(\"http://localhost:3000/auth/signup\", {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        credentials: 'include', // Don't forget to specify this if you need cookies\r\n        body: JSON.stringify(data1)\r\n      })\r\n          .then((response) => response.json())\r\n          .then(() => {\r\n            location.assign(\"/\");\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n    },\r\n\r\n    // validatePassword(password) {\r\n    //   const isLengthValid = password.length >= 8 && password.length < 15;\r\n    //   const hasUppercase = /[A-Z]/.test(password);\r\n    //   const hasTwoLowercase = /[a-z].*[a-z]/.test(password);\r\n    //   const hasNumericValue = /\\d/.test(password);\r\n    //   const startsWithUppercase = /^[A-Z]/.test(password);\r\n    //   const hasUnderscore = /_/.test(password);\r\n    //\r\n    //   const isValid =\r\n    //       isLengthValid &&\r\n    //       hasUppercase &&\r\n    //       hasTwoLowercase &&\r\n    //       hasNumericValue &&\r\n    //       startsWithUppercase &&\r\n    //       hasUnderscore;\r\n    //   return isValid;\r\n    //\r\n    // },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n.validation-error {\r\n  color: red;\r\n  margin-top: 5px;\r\n  text-align: left;\r\n}\r\n\r\nbody {\r\n  font-family: 'Times New Roman', Times, serif, monospace;\r\n  background-color: #f2f2f2;\r\n}\r\n\r\nsection {\r\n  position: relative;\r\n  height: 500px;\r\n}\r\n\r\n\r\n.login-container {\r\n  margin: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  -ms-transform: translate(-50%, -50%);\r\n  transform: translate(-50%, -50%);\r\n  width: 40%;\r\n  /*max-width: 400px;*/\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n#head1 {\r\n  margin-top: auto;\r\n  letter-spacing: 2px;\r\n}\r\n\r\n.buttons{\r\n  display: flex;\r\n  width: 100%;\r\n  height: 30px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 30px;\r\n}\r\n\r\n.signup{\r\n  cursor: pointer;\r\n  width: 20%;\r\n  height: 100%;\r\n  border-radius: 10px;\r\n  border: none;\r\n  background-color: deepskyblue;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  width: 10%;\r\n  margin-right: 10px;\r\n  white-space: nowrap;\r\n}\r\n\r\n\r\nh2 {\r\n  text-align: center;\r\n  font-weight: normal;\r\n  font-size: large;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"email\"],\r\ninput[type=\"password\"] {\r\n  width: 50%;\r\n  margin: auto;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n}\r\n\r\n\r\ninput[type=\"submit\"] {\r\n  width: 25%;\r\n  margin: auto;\r\n  background-color: #007BFF;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\n\r\ninput[type=\"submit\"]:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.forgot-password {\r\n  padding-top: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.create-account {\r\n  padding-top: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.login-container p {\r\n  font-style: italic;\r\n}\r\n\r\n.login-container > h2 {\r\n  color: black;\r\n}\r\n\r\n.create-account + div {\r\n  font-weight: bold;\r\n}\r\n\r\n.create-account ~ * {\r\n  text-shadow: 0.5px 0.5px 0.5px gray;\r\n}\r\n\r\n\r\n@media (max-width: 768px) {\r\n  body {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .login-container {\r\n    width: 90%;\r\n  }\r\n\r\n  .input-group {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  label {\r\n    margin-right: 0;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  input[type=\"email\"],\r\n  input[type=\"password\"] {\r\n    width: 100%;\r\n  }\r\n\r\n  input[type=\"submit\"] {\r\n    width: auto;\r\n  }\r\n}\r\n</style>"],"mappings":";;;EAESA,KAAK,EAAC;AAAiB;;EAMrBA,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;;EAGrBF,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAAsC;EAA/BC,GAAG,EAAC;AAAU,GAAC,UAAQ;;EAgB3BF,KAAK,EAAC;AAAS;;uBA5BxBG,mBAAA,CAoCU,kBAnCRF,mBAAA,CAkCM,OAlCNG,UAkCM,GAjCJC,mBAAA,kEAAmE,EACnEA,mBAAA,wCAAyC,EACzCA,mBAAA,iEAAkE,EAClEA,mBAAA,gBAAmB,EACnBA,mBAAA,+BAAkC,EAClCJ,mBAAA,CAGM,OAHNK,UAGM,GAFJC,UAAgC,E,gBAChCN,mBAAA,CAAqE;IAA9DO,EAAE,EAAC,OAAO;IAACC,IAAI,EAAC,OAAO;IAACC,IAAI,EAAC,OAAO;IAACC,QAAQ,EAAR,EAAQ;+DAAUC,KAAA,CAAAC,KAAK,GAAAC,MAAA;iDAALF,KAAA,CAAAC,KAAK,E,KAErEZ,mBAAA,CAGM,OAHNc,UAGM,GAFJC,UAAsC,E,gBACtCf,mBAAA,CAAiF;IAA1EO,EAAE,EAAC,UAAU;IAACC,IAAI,EAAC,UAAU;IAACC,IAAI,EAAC,UAAU;IAACC,QAAQ,EAAR,EAAQ;+DAAUC,KAAA,CAAAK,QAAQ,GAAAH,MAAA;iDAARF,KAAA,CAAAK,QAAQ,E,KAIvFZ,mBAAA,oEAAmE,EACnEA,mBAAA,kEAAqE,EACrEA,mBAAA,gBAAmB,EACnBA,mBAAA,wEAA2E,EAC3EA,mBAAA,yEAA4E,EAC5EA,mBAAA,0EAA6E,EAC7EA,mBAAA,0DAA6D,EAC7DA,mBAAA,wDAA2D,EAC3DA,mBAAA,mDAAoD,EACpDA,mBAAA,iBAAoB,EACpBA,mBAAA,gBAAmB,EACbJ,mBAAA,CAEM,OAFNiB,UAEM,GADJjB,mBAAA,CAAuD;IAA/CD,KAAK,EAAC,QAAQ;IAAEmB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,SAAO,E,GAGhDhB,mBAAA,yCAA0C,EAC1CA,mBAAA,gEAAiE,EACjEA,mBAAA,gBAAmB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}