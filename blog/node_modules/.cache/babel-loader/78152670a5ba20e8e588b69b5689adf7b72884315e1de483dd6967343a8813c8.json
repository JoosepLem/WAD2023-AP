{"ast":null,"code":"export default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\"\n      // isEmailValid: true,\n      // isPasswordValid: true,\n    };\n  },\n\n  methods: {\n    SignUp() {\n      var data1 = {\n        email: this.username,\n        password: this.password\n      };\n      fetch(\"http://localhost:3000/auth/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        // Don't forget to specify this if you need cookies\n        body: JSON.stringify(data1)\n      }).then(response => response.json()).then(() => {\n        location.assign(\"/\");\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n\n    // validatePassword(password) {\n    //   const isLengthValid = password.length >= 8 && password.length < 15;\n    //   const hasUppercase = /[A-Z]/.test(password);\n    //   const hasTwoLowercase = /[a-z].*[a-z]/.test(password);\n    //   const hasNumericValue = /\\d/.test(password);\n    //   const startsWithUppercase = /^[A-Z]/.test(password);\n    //   const hasUnderscore = /_/.test(password);\n    //\n    //   const isValid =\n    //       isLengthValid &&\n    //       hasUppercase &&\n    //       hasTwoLowercase &&\n    //       hasNumericValue &&\n    //       startsWithUppercase &&\n    //       hasUnderscore;\n    //   return isValid;\n    //\n    // },\n  }\n};","map":{"version":3,"names":["data","username","password","methods","SignUp","data1","email","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","location","assign","catch","e","console","log"],"sources":["/Users/nikita_filin/Desktop/TU/WAD/WAD2023-AP/blog/src/views/SignUpView.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"login-container\">\n      <!--      <h2 id=\"head1\"><strong>Welcome to PostIt</strong></h2>-->\n      <!--      <div class=\"create-account\">-->\n      <!--        <router-link to=\"/\">Create an account</router-link>-->\n      <!--      </div>-->\n      <!--      <h2>or<br>Log in</h2>-->\n      <div class=\"input-group\">\n        <label for=\"username\">Email:</label>\n        <input v-model=\"username\" type=\"email\" id=\"username\" name=\"username\" placeholder=\"Email\" required>\n      </div>\n      <div class=\"input-group\">\n        <label for=\"password\">Password:</label>\n        <input v-model=\"password\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" required>\n      </div>\n\n\n<!--      <div v-if=\"!isPasswordValid\" class=\"validation-error\">-->\n<!--        Password is not valid. Please follow these conditions:-->\n<!--        <ul>-->\n<!--          <li>At least 8 characters and less than 15 characters</li>-->\n<!--          <li>Includes at least one uppercase alphabet character</li>-->\n<!--          <li>Includes at least two lowercase alphabet characters</li>-->\n<!--          <li>Includes at least one numeric value</li>-->\n<!--          <li>Starts with an uppercase alphabet</li>-->\n<!--          <li>Includes the character \"_\"</li>-->\n<!--        </ul>-->\n<!--      </div>-->\n      <button @click=\"SignUp\">Sign up</button>\n\n      <!--      <div class=\"forgot-password\">-->\n      <!--        <router-link to=\"/\">Forgot Password?</router-link>-->\n      <!--      </div>-->\n    </div>\n  </section>\n</template>\n\n<script>\n\nexport default {\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      // isEmailValid: true,\n      // isPasswordValid: true,\n    };\n  },\n  methods: {\n    SignUp() {\n      var data1 = {email: this.username, password: this.password};\n      fetch(\"http://localhost:3000/auth/signup\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        credentials: 'include', // Don't forget to specify this if you need cookies\n        body: JSON.stringify(data1)\n      })\n          .then((response) => response.json())\n          .then(() => {\n            location.assign(\"/\");\n          })\n          .catch((e) => {\n            console.log(e);\n          });\n    },\n\n    // validatePassword(password) {\n    //   const isLengthValid = password.length >= 8 && password.length < 15;\n    //   const hasUppercase = /[A-Z]/.test(password);\n    //   const hasTwoLowercase = /[a-z].*[a-z]/.test(password);\n    //   const hasNumericValue = /\\d/.test(password);\n    //   const startsWithUppercase = /^[A-Z]/.test(password);\n    //   const hasUnderscore = /_/.test(password);\n    //\n    //   const isValid =\n    //       isLengthValid &&\n    //       hasUppercase &&\n    //       hasTwoLowercase &&\n    //       hasNumericValue &&\n    //       startsWithUppercase &&\n    //       hasUnderscore;\n    //   return isValid;\n    //\n    // },\n  },\n};\n</script>\n\n\n<style scoped>\n\n.validation-error {\n  color: red;\n  margin-top: 5px;\n  text-align: left;\n}\n\nbody {\n  font-family: 'Times New Roman', Times, serif, monospace;\n  background-color: #f2f2f2;\n}\n\nsection {\n  position: relative;\n  height: 500px;\n}\n\n\n.login-container {\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -ms-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  width: 40%;\n  /*max-width: 400px;*/\n  padding: 20px;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n#head1 {\n  margin-top: auto;\n  letter-spacing: 2px;\n}\n\n.input-group {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n}\n\nlabel {\n  width: 10%;\n  margin-right: 10px;\n  white-space: nowrap;\n}\n\n\nh2 {\n  text-align: center;\n  font-weight: normal;\n  font-size: large;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput[type=\"email\"],\ninput[type=\"password\"] {\n  width: 50%;\n  margin: auto;\n  padding: 10px;\n  margin-bottom: 15px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n}\n\n\ninput[type=\"submit\"] {\n  width: 25%;\n  margin: auto;\n  background-color: #007BFF;\n  color: #fff;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n}\n\ninput[type=\"submit\"]:hover {\n  background-color: #0056b3;\n}\n\n.forgot-password {\n  padding-top: 10px;\n  text-align: center;\n}\n\n.create-account {\n  padding-top: 10px;\n  text-align: center;\n}\n\n.login-container p {\n  font-style: italic;\n}\n\n.login-container > h2 {\n  color: black;\n}\n\n.create-account + div {\n  font-weight: bold;\n}\n\n.create-account ~ * {\n  text-shadow: 0.5px 0.5px 0.5px gray;\n}\n\n\n@media (max-width: 768px) {\n  body {\n    flex-direction: column;\n  }\n\n  .login-container {\n    width: 90%;\n  }\n\n  .input-group {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  label {\n    margin-right: 0;\n    margin-bottom: 5px;\n  }\n\n  input[type=\"email\"],\n  input[type=\"password\"] {\n    width: 100%;\n  }\n\n  input[type=\"submit\"] {\n    width: auto;\n  }\n}\n</style>"],"mappings":"AAwCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;MACV;MACA;IACF,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAIC,KAAI,GAAI;QAACC,KAAK,EAAE,IAAI,CAACL,QAAQ;QAAEC,QAAQ,EAAE,IAAI,CAACA;MAAQ,CAAC;MAC3DK,KAAK,CAAC,mCAAmC,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,WAAW,EAAE,SAAS;QAAE;QACxBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK;MAC5B,CAAC,EACIS,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAClCF,IAAI,CAAC,MAAM;QACVG,QAAQ,CAACC,MAAM,CAAC,GAAG,CAAC;MACtB,CAAC,EACAC,KAAK,CAAEC,CAAC,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAChB,CAAC,CAAC;IACR;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}