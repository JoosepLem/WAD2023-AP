{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Post from \"@/components/Post\";\nexport default {\n  components: {\n    Post\n  },\n  methods: {\n    Logout() {\n      fetch(\"http://localhost:3000/auth/logout\", {\n        credentials: 'include' //  Don't forget to specify this if you need cookies\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        console.log('jwt removed');\n        //console.log('jwt removed:' + auth.authenticated());\n        this.$router.push(\"/login\");\n        //location.assign(\"/\");\n      }).catch(e => {\n        console.log(e);\n        console.log(\"error logout\");\n      });\n    },\n    openAddPost() {\n      this.$router.push(\"/add-post\");\n    },\n    deleteAllPosts() {\n      // Send a request to delete all posts\n      fetch(\"http://localhost:3000/posts/delete-all\", {\n        method: \"DELETE\",\n        credentials: 'include'\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        // Fetch the updated list of posts after deletion\n        this.$store.dispatch('getAllPostsAct');\n      }).catch(error => {\n        console.error(\"Error deleting posts:\", error);\n      });\n    }\n  },\n  computed: {\n    getPosts() {\n      // console.log(this.$store.getters.getPosts)\n      return this.$store.getters.getPosts;\n    }\n  },\n  mounted() {\n    this.$store.dispatch('getAllPostsAct');\n  }\n};","map":{"version":3,"names":["Post","components","methods","Logout","fetch","credentials","then","response","json","data","console","log","$router","push","catch","e","openAddPost","deleteAllPosts","method","$store","dispatch","error","computed","getPosts","getters","mounted"],"sources":["C:\\Users\\Joosep Lember\\OneDrive\\Documents\\Ãœlikooli proge\\WAD-HW1\\WAD2023-AP\\blog\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <button  @click=\"Logout\" class=\"logout\">Logout</button>\r\n    <div v-for=\"(post) in getPosts\">\r\n      <Post :post=\"post\"/>\r\n    </div>\r\n    <div class=\"post-buttons\">\r\n      <button class=\"post-btn\" @click=\"openAddPost\">Add post</button>\r\n      <button class=\"post-btn\" @click=\"deleteAllPosts\">Delete all</button>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport Post from \"@/components/Post\";\r\n\r\n\r\nexport default {\r\n  components: {\r\n    Post,\r\n  },\r\n\r\n  methods: {\r\n    Logout() {\r\n      fetch(\"http://localhost:3000/auth/logout\", {\r\n        credentials: 'include', //  Don't forget to specify this if you need cookies\r\n      })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            console.log(data);\r\n            console.log('jwt removed');\r\n            //console.log('jwt removed:' + auth.authenticated());\r\n            this.$router.push(\"/login\");\r\n            //location.assign(\"/\");\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n            console.log(\"error logout\");\r\n          });\r\n    },\r\n\r\n    openAddPost(){\r\n      this.$router.push(\"/add-post\");\r\n    },\r\n\r\n    deleteAllPosts() {\r\n      // Send a request to delete all posts\r\n      fetch(\"http://localhost:3000/posts/delete-all\", {\r\n        method: \"DELETE\",\r\n        credentials: 'include',\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          // Fetch the updated list of posts after deletion\r\n          this.$store.dispatch('getAllPostsAct');\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error deleting posts:\", error);\r\n        });\r\n    },\r\n  },\r\n  \r\n\r\n  computed: {\r\n    getPosts() {\r\n      // console.log(this.$store.getters.getPosts)\r\n      return this.$store.getters.getPosts;\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.$store.dispatch('getAllPostsAct');\r\n\r\n  }\r\n\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n*{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.logout{\r\n  width: 70px;\r\n  height: 40px;\r\n  margin: 23px auto 0;\r\n  background-color: deepskyblue;\r\n  border-radius: 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n  text-align: center;\r\n}\r\n\r\nhtml{\r\n    position: relative;\r\n    min-height: 100%;\r\n}\r\n\r\nbody {\r\n    margin: 0 0 100px;\r\n    font-family: 'Times New Roman', Times, serif, monospace;\r\n}\r\n\r\n.wrapper{\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.post-buttons{\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 650px;\r\n  margin: 30px auto 0;\r\n}\r\n\r\n.post-btn{\r\n  cursor: pointer;\r\n  border-radius: 20px;\r\n  border: none;\r\n  font-size: 20px;\r\n  padding: 12px;\r\n  background-color: deepskyblue;\r\n}\r\n\r\n</style>"],"mappings":";AAgBA,OAAOA,IAAG,MAAO,mBAAmB;AAGpC,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EAEDE,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACPC,KAAK,CAAC,mCAAmC,EAAE;QACzCC,WAAW,EAAE,SAAS,CAAE;MAC1B,CAAC,EACIC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAClCF,IAAI,CAAEG,IAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QAC1B;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC3B;MACF,CAAC,EACAC,KAAK,CAAEC,CAAC,IAAK;QACZL,OAAO,CAACC,GAAG,CAACI,CAAC,CAAC;QACdL,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B,CAAC,CAAC;IACR,CAAC;IAEDK,WAAWA,CAAA,EAAE;MACX,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IAEDI,cAAcA,CAAA,EAAG;MACf;MACAb,KAAK,CAAC,wCAAwC,EAAE;QAC9Cc,MAAM,EAAE,QAAQ;QAChBb,WAAW,EAAE;MACf,CAAC,EACEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAClCF,IAAI,CAAEG,IAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB;QACA,IAAI,CAACU,MAAM,CAACC,QAAQ,CAAC,gBAAgB,CAAC;MACxC,CAAC,EACAN,KAAK,CAAEO,KAAK,IAAK;QAChBX,OAAO,CAACW,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;EACF,CAAC;EAGDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT;MACA,OAAO,IAAI,CAACJ,MAAM,CAACK,OAAO,CAACD,QAAQ;IACrC;EACF,CAAC;EAEDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACN,MAAM,CAACC,QAAQ,CAAC,gBAAgB,CAAC;EAExC;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}