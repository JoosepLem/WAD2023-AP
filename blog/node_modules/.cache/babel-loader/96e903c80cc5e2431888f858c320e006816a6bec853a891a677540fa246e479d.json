{"ast":null,"code":"export default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      signupError: null\n    };\n  },\n  methods: {\n    LogIn() {\n      var data = {\n        email: this.email,\n        password: this.password\n      };\n      fetch(\"http://localhost:3000/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        body: JSON.stringify(data)\n      }).then(response => {\n        if (response.status === 401) {\n          throw new Error('Incorrect login or password');\n        }\n        return response.json();\n      }).then(() => {\n        location.assign(\"/\");\n      }).catch(e => {\n        this.loginError = e.message;\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","email","password","signupError","methods","LogIn","fetch","method","headers","credentials","body","JSON","stringify","then","response","status","Error","json","location","assign","catch","e","loginError","message"],"sources":["/Users/nikita_filin/Desktop/TU/WAD/WAD2023-AP/blog/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\"login-container\">\n        <div class=\"input-group\">\n          <label for=\"email\">Email</label>\n          <input id=\"email\" type=\"email\" name=\"email\" required v-model=\"email\">\n        </div>\n        <div class=\"input-group\">\n          <label for=\"password\">Password</label>\n          <input id=\"password\" type=\"password\" name=\"password\" required v-model=\"password\">\n        </div>\n      <div class=\"buttons\">\n        <button class=\"login\" @click=\"LogIn\">Log in</button>\n        <span>or</span>\n        <button class=\"signup\" @click='this.$router.push(\"/signup\")'>Sign up</button>\n      </div>\n      <div v-if=\"signupError\" class=\"signup-error\">{{ signupError }}</div>\n\n\n\n    </div>\n  </section>\n</template>\n\n<script>\n\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      signupError: null,\n    };\n  },\n  methods:{\n    LogIn() {\n      var data = {email: this.email, password: this.password};\n      fetch(\"http://localhost:3000/auth/login\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\",},\n        credentials: 'include',\n        body: JSON.stringify(data)})\n          .then((response) => {\n            if (response.status === 401) {\n              throw new Error('Incorrect login or password');\n            }\n            return response.json();\n          })\n          .then(() => {\n            location.assign(\"/\")})\n          .catch((e) => {\n            this.loginError = e.message;\n\n         });\n    },\n  },\n};\n</script>\n\n\n<style scoped>\n\n.buttons{\n  display: flex;\n  width: 100%;\n  height: 30px;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n}\n\n.signup-error {\n  color: red;\n  margin-top: 10px;\n  text-align: center;\n}\n\n.login, .signup{\n  cursor: pointer;\n  width: 20%;\n  height: 100%;\n  border-radius: 10px;\n  border: none;\n  background-color: deepskyblue;\n  opacity: 1;\n  transition: opacity 0.3s ease;\n}\n\n.login:hover, .signup:hover{\n  opacity: 0.7;\n}\n\n.validation-error {\n  color: red;\n  margin-top: 5px;\n  text-align: left;\n}\n\nbody {\n  font-family: 'Times New Roman', Times, serif, monospace;\n  background-color: #f2f2f2;\n}\n\nsection{\n  position: relative;\n  height: 500px;\n}\n\n\n.login-container {\n\n\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -ms-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  width: 40%;\n  padding: 20px;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n#head1 {\n  margin-top: auto;\n  letter-spacing: 2px;\n}\n\n.input-group {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n}\n\nlabel {\n  width: 10%;\n  margin-right: 10px;\n  white-space: nowrap;\n}\n\n\nh2 {\n  text-align: center;\n  font-weight: normal;\n  font-size: large;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput[type=\"email\"],\ninput[type=\"password\"] {\n  width: 50%;\n  margin: auto;\n  padding: 10px;\n  margin-bottom: 15px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n}\n\n\ninput[type=\"submit\"] {\n  width: 25%;\n  margin: auto;\n  background-color: #007BFF;\n  color: #fff;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n}\n\ninput[type=\"submit\"]:hover {\n  background-color: #0056b3;\n}\n\n.forgot-password {\n  padding-top: 10px;\n  text-align: center;\n}\n\n.create-account {\n  padding-top: 10px;\n  text-align: center;\n}\n\n.login-container p {\n  font-style: italic;\n}\n\n.login-container > h2 {\n  color: black;\n}\n\n.create-account + div {\n  font-weight: bold;\n}\n\n.create-account ~ * {\n  text-shadow: 0.5px 0.5px 0.5px rgb(128, 128, 128);\n}\n\n\n@media (max-width: 768px) {\n  body {\n    flex-direction: column;\n  }\n\n  .login-container {\n    width: 90%;\n  }\n\n  .input-group {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  label {\n    margin-right: 0;\n    margin-bottom: 5px;\n  }\n\n  input[type=\"email\"],\n  input[type=\"password\"] {\n    width: 100%;\n  }\n\n  input[type=\"submit\"] {\n    width: auto;\n  }\n}\n</style>"],"mappings":"AA0BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAC;IACNC,KAAKA,CAAA,EAAG;MACN,IAAIL,IAAG,GAAI;QAACC,KAAK,EAAE,IAAI,CAACA,KAAK;QAAEC,QAAQ,EAAE,IAAI,CAACA;MAAQ,CAAC;MACvDI,KAAK,CAAC,kCAAkC,EAAE;QACxCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAmB,CAAC;QAC9CC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAAC,CAAC,EACxBa,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UAC3B,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,EACAJ,IAAI,CAAC,MAAM;QACVK,QAAQ,CAACC,MAAM,CAAC,GAAG,CAAC;MAAA,CAAC,EACtBC,KAAK,CAAEC,CAAC,IAAK;QACZ,IAAI,CAACC,UAAS,GAAID,CAAC,CAACE,OAAO;MAE9B,CAAC,CAAC;IACP;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}