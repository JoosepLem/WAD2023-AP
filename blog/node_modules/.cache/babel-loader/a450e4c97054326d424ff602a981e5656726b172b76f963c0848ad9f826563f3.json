{"ast":null,"code":"import Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nexport default {\n  components: {\n    Header,\n    Footer\n  },\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      isEmailValid: true,\n      isPasswordValid: true\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.isPasswordValid = this.validatePassword(this.password);\n\n      // If email or password is not valid, prevent form submission\n      if (!this.isPasswordValid) {\n        return;\n      }\n    },\n    validatePassword(password) {\n      // Check the length (at least 8 characters and less than 15 characters)\n      const isLengthValid = password.length >= 8 && password.length < 15;\n\n      // Check if it includes at least one uppercase alphabet character\n      const hasUppercase = /[A-Z]/.test(password);\n\n      // Check if it includes at least two lowercase alphabet characters\n      const hasTwoLowercase = /[a-z].*[a-z]/.test(password);\n\n      // Check if it includes at least one numeric value\n      const hasNumericValue = /\\d/.test(password);\n\n      // Check if it starts with an uppercase alphabet\n      const startsWithUppercase = /^[A-Z]/.test(password);\n\n      // Check if it includes the character \"_\"\n      const hasUnderscore = /_/.test(password);\n\n      // Combine all conditions\n      const isValid = isLengthValid && hasUppercase && hasTwoLowercase && hasNumericValue && startsWithUppercase && hasUnderscore;\n      return isValid;\n    }\n  }\n};","map":{"version":3,"names":["Header","Footer","components","data","username","password","isEmailValid","isPasswordValid","methods","handleSubmit","validatePassword","isLengthValid","length","hasUppercase","test","hasTwoLowercase","hasNumericValue","startsWithUppercase","hasUnderscore","isValid"],"sources":["C:\\Users\\Joosep Lember\\OneDrive\\Documents\\Ãœlikooli proge\\WAD-HW1\\WAD2023-AP\\blog\\src\\views\\SignUpView.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <div class=\"login-container\">\r\n      <h2 id=\"head1\"><strong>Welcome to PostIt</strong></h2>\r\n      <div class=\"create-account\">\r\n        <router-link to=\"#\">Create an account</router-link>\r\n      </div>\r\n      <h2>or<br>Log in</h2>\r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <input v-model=\"username\" type=\"email\" id=\"username\" name=\"username\" placeholder=\"Email\" required>\r\n        <input v-model=\"password\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" required>\r\n\r\n        <div v-if=\"!isPasswordValid\" class=\"validation-error\">\r\n          Password is not valid. Please follow these conditions:\r\n          <ul>\r\n            <li>At least 8 characters and less than 15 characters</li>\r\n            <li>Includes at least one uppercase alphabet character</li>\r\n            <li>Includes at least two lowercase alphabet characters</li>\r\n            <li>Includes at least one numeric value</li>\r\n            <li>Starts with an uppercase alphabet</li>\r\n            <li>Includes the character \"_\"</li>\r\n          </ul>\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Login\">\r\n      </form>\r\n      <div class=\"forgot-password\">\r\n        <router-link to=\"#\">Forgot Password?</router-link>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport Header from \"@/components/Header\";\r\nimport Footer from \"@/components/Footer\";\r\n\r\nexport default {\r\n  components: {\r\n    Header,\r\n    Footer,\r\n  },\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      isEmailValid: true,\r\n      isPasswordValid: true,\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmit() {\r\n      this.isPasswordValid = this.validatePassword(this.password);\r\n\r\n      // If email or password is not valid, prevent form submission\r\n      if (!this.isPasswordValid) {\r\n        return;\r\n      }\r\n    },\r\n    validatePassword(password) {\r\n      // Check the length (at least 8 characters and less than 15 characters)\r\n      const isLengthValid = password.length >= 8 && password.length < 15;\r\n\r\n    // Check if it includes at least one uppercase alphabet character\r\n    const hasUppercase = /[A-Z]/.test(password);\r\n\r\n    // Check if it includes at least two lowercase alphabet characters\r\n    const hasTwoLowercase = /[a-z].*[a-z]/.test(password);\r\n\r\n    // Check if it includes at least one numeric value\r\n    const hasNumericValue = /\\d/.test(password);\r\n\r\n    // Check if it starts with an uppercase alphabet\r\n    const startsWithUppercase = /^[A-Z]/.test(password);\r\n\r\n// Check if it includes the character \"_\"\r\nconst hasUnderscore = /_/.test(password);\r\n\r\n// Combine all conditions\r\nconst isValid =\r\n  isLengthValid &&\r\n  hasUppercase &&\r\n  hasTwoLowercase &&\r\n  hasNumericValue &&\r\n  startsWithUppercase &&\r\n  hasUnderscore;\r\n\r\nreturn isValid;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.validation-error {\r\n  color: red;\r\n  margin-top: 5px;\r\n  text-align: left;\r\n}\r\n\r\nbody {\r\n  font-family: 'Times New Roman', Times, serif, monospace;\r\n  background-color: #f2f2f2;\r\n}\r\n\r\nsection{\r\n  position: relative;\r\n  height: 500px;\r\n}\r\n\r\n\r\n.login-container {\r\n  margin: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  -ms-transform: translate(-50%, -50%);\r\n  transform: translate(-50%, -50%);\r\n  width: 40%;\r\n  /*max-width: 400px;*/\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n#head1 {\r\n  margin-top: auto;\r\n  letter-spacing: 2px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  font-weight: normal;\r\n  font-size: large;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"email\"],\r\ninput[type=\"password\"] {\r\n  width: 50%;\r\n  margin: auto;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n}\r\n\r\ninput[type=\"submit\"] {\r\n  width: 25%;\r\n  margin: auto;\r\n  background-color: #007BFF;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\n\r\ninput[type=\"submit\"]:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.forgot-password {\r\n  padding-top: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.create-account {\r\n  padding-top: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.login-container p {\r\n  font-style: italic;\r\n}\r\n\r\n.login-container > h2 {\r\n  color: black;\r\n}\r\n\r\n.create-account + div {\r\n  font-weight: bold;\r\n}\r\n\r\n.create-account ~ * {\r\n  text-shadow: 0.5px 0.5px 0.5px gray;\r\n}\r\n\r\n\r\n@media (max-width: 768px) {\r\n  body {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .login-container {\r\n    width: 90%;\r\n  }\r\n\r\n  input[type=\"text\"],\r\n  input[type=\"password\"] {\r\n    width: 100%;\r\n  }\r\n\r\n  input[type=\"submit\"] {\r\n    width: auto;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAkCA,OAAOA,MAAK,MAAO,qBAAqB;AACxC,OAAOC,MAAK,MAAO,qBAAqB;AAExC,eAAe;EACbC,UAAU,EAAE;IACVF,MAAM;IACNC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,IAAI;MAClBC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACF,eAAc,GAAI,IAAI,CAACG,gBAAgB,CAAC,IAAI,CAACL,QAAQ,CAAC;;MAE3D;MACA,IAAI,CAAC,IAAI,CAACE,eAAe,EAAE;QACzB;MACF;IACF,CAAC;IACDG,gBAAgBA,CAACL,QAAQ,EAAE;MACzB;MACA,MAAMM,aAAY,GAAIN,QAAQ,CAACO,MAAK,IAAK,KAAKP,QAAQ,CAACO,MAAK,GAAI,EAAE;;MAEpE;MACA,MAAMC,YAAW,GAAI,OAAO,CAACC,IAAI,CAACT,QAAQ,CAAC;;MAE3C;MACA,MAAMU,eAAc,GAAI,cAAc,CAACD,IAAI,CAACT,QAAQ,CAAC;;MAErD;MACA,MAAMW,eAAc,GAAI,IAAI,CAACF,IAAI,CAACT,QAAQ,CAAC;;MAE3C;MACA,MAAMY,mBAAkB,GAAI,QAAQ,CAACH,IAAI,CAACT,QAAQ,CAAC;;MAEvD;MACA,MAAMa,aAAY,GAAI,GAAG,CAACJ,IAAI,CAACT,QAAQ,CAAC;;MAExC;MACA,MAAMc,OAAM,GACVR,aAAY,IACZE,YAAW,IACXE,eAAc,IACdC,eAAc,IACdC,mBAAkB,IAClBC,aAAa;MAEf,OAAOC,OAAO;IACV;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}