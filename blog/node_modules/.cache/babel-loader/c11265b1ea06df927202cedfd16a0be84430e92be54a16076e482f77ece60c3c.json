{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($data.post.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.post.body), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.post.date), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$data","post","title","body","date"],"sources":["C:\\Users\\johan\\OneDrive - Tartu Ãœlikool\\Veebirakenduste loomine\\WAD2023-AP\\blog\\src\\views\\IndividualPost.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>{{ post.title }}</h1>\r\n      <p>{{ post.body }}</p>\r\n      <p>{{ post.date }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        post: {},\r\n      };\r\n    },\r\n    mounted() {\r\n      // Fetch the data for the individual post using the route parameter\r\n      const postId = this.$route.params.id;\r\n      this.fetchPost(postId);\r\n    },\r\n    methods: {\r\n        fetchPost(postId) {\r\n            // Fetch the data for the individual post\r\n            fetch(`http://localhost:3000/post/get/${postId}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.post = data; // Directly assign the response data\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching individual post:\", error);\r\n            });\r\n        },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;uBACIA,mBAAA,CAIM,cAHJC,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBC,KAAA,CAAAC,IAAI,CAACC,KAAK,kBACjBJ,mBAAA,CAAsB,WAAAC,gBAAA,CAAhBC,KAAA,CAAAC,IAAI,CAACE,IAAI,kBACfL,mBAAA,CAAsB,WAAAC,gBAAA,CAAhBC,KAAA,CAAAC,IAAI,CAACG,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}