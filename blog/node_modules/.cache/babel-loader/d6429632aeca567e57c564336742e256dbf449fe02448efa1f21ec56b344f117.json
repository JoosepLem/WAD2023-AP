{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"individual-post\"\n};\nconst _hoisted_2 = {\n  class: \"post-body\"\n};\nconst _hoisted_3 = {\n  class: \"post-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString('Post ' + $data.post.id), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.editedBody = $event)\n  }, _toDisplayString($data.post.body), 513 /* TEXT, NEED_PATCH */), [[_vModelText, _ctx.editedBody]])]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.updatePost && _ctx.updatePost(...args))\n  }, \"Update\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.deletePost && _ctx.deletePost(...args))\n  }, \"Delete\")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","post","id","_hoisted_2","_ctx","editedBody","$event","body","_hoisted_3","onClick","_cache","args","updatePost","deletePost"],"sources":["C:\\Users\\johan\\OneDrive - Tartu Ãœlikool\\Veebirakenduste loomine\\WAD2023-AP\\blog\\src\\views\\IndividualPost.vue"],"sourcesContent":["<template>\r\n  <div class=\"individual-post\">\r\n    <h1>{{ 'Post ' + post.id }}</h1>\r\n    <div class=\"post-body\">\r\n      <textarea v-model=\"editedBody\">{{ post.body }}</textarea>\r\n    </div>\r\n    <div class=\"post-actions\">\r\n      <button @click=\"updatePost\">Update</button>\r\n      <button @click=\"deletePost\">Delete</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      post: {},\r\n    };\r\n  },\r\n  mounted() {\r\n    // Fetch the data for the individual post using the route parameter\r\n    const postId = this.$route.params.id;\r\n    this.fetchPost(postId);\r\n  },\r\n  methods: {\r\n      fetchPost(postId) {\r\n          // Fetch the data for the individual post\r\n          fetch(`http://localhost:3000/post/get/${postId}`)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n              this.post = data; // Directly assign the response data\r\n          })\r\n          .catch((error) => {\r\n              console.error(\"Error fetching individual post:\", error);\r\n          });\r\n      },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.individual-post {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n}\r\n\r\n.post-body {\r\n  margin: 20px;\r\n}\r\n\r\n.post-actions {\r\n  margin-top: 20px;\r\n}\r\n\r\nbutton {\r\n  padding: 12px 20px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n  background-color: lightblue;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n  "],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAErBA,KAAK,EAAC;AAAW;;EAGjBA,KAAK,EAAC;AAAc;;uBAL3BC,mBAAA,CASM,OATNC,UASM,GARJC,mBAAA,CAAgC,YAAAC,gBAAA,WAAfC,KAAA,CAAAC,IAAI,CAACC,EAAE,kBACxBJ,mBAAA,CAEM,OAFNK,UAEM,G,gBADJL,mBAAA,CAAyD;+DAAtCM,IAAA,CAAAC,UAAU,GAAAC,MAAA;sBAAKN,KAAA,CAAAC,IAAI,CAACM,IAAI,iC,cAAxBH,IAAA,CAAAC,UAAU,E,KAE/BP,mBAAA,CAGM,OAHNU,UAGM,GAFJV,mBAAA,CAA2C;IAAlCW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,IAAA,CAAAQ,UAAA,IAAAR,IAAA,CAAAQ,UAAA,IAAAD,IAAA,CAAU;KAAE,QAAM,GAClCb,mBAAA,CAA2C;IAAlCW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEP,IAAA,CAAAS,UAAA,IAAAT,IAAA,CAAAS,UAAA,IAAAF,IAAA,CAAU;KAAE,QAAM,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}